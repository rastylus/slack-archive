[
  {
    "client_msg_id": "d6ecdd0f-b570-4f90-98b4-b4c7e34fafc1",
    "type": "message",
    "user": "U065L4THRPF",
    "text": "I wish I could provide specifics, but the best thing I can suggest is leaning into whatever the hiring company offers publicly as the best source material to study and actively coding. For example, if you have a tech job interview coming up for Purina and, by chance, they shared what their developer's tech stack is, I would review that and then study any pieces I don't know fully to prepare myself for the tech interview. Most of the time, the technical interview follows an intro interview where they will explain what they plan to do in the technical portion, so you'll have ample time to review and prepare. \n\n*I can't stress this enough. Every company is different.*\n\nSome companies ask tech questions based on the language. Some companies will provide a scenario and ask how you'd tackle the problem. Some companies will share code and see if you can read and understand what it's doing. Some companies will even give you a tech project to complete independently.\n\nEveryone treats the tech portion differently based on their needs. I recently interviewed for my current job, and even though the position was for a senior-level Laravel developer, which is mostly back-end, they were looking for someone to take on more front-end work. So, my tech project was front-end based. Again, they explained this to me in the intro interview, and I knew what was coming.\n\nIn this situation for LaunchCode, your hiring company is technically LaunchCode, so I would review everything you've learned in the program as LC will be testing your technical ability with questions and plans to ask questions that you should know by now from the previous curriculum.\n\nIn general, for all technical prep, I prepare myself by building something, seeing where my pitfalls are and working on them from there. Doing gives the most touches in the most areas. If a company tries to provide you with a tech project to do or asks you to speak about something, actively coding gives the most coverage for the unexpected.\n\nI hope that helps.",
    "ts": "1702276362.729749",
    "thread_ts": "1702040207.016279",
    "edited": {
      "user": "U065L4THRPF",
      "ts": "1702277118.000000"
    },
    "parent_user_id": "U056Q4RGKB9",
    "team": "T050CSX3EMT",
    "replace_original": false,
    "delete_original": false,
    "metadata": {
      "event_type": "",
      "event_payload": null
    },
    "blocks": [
      {
        "type": "rich_text",
        "block_id": "/e5XR",
        "elements": [
          {
            "type": "rich_text_section",
            "elements": [
              {
                "type": "text",
                "text": "I wish I could provide specifics, but the best thing I can suggest is leaning into whatever the hiring company offers publicly as the best source material to study and actively coding. For example, if you have a tech job interview coming up for Purina and, by chance, they shared what their developer's tech stack is, I would review that and then study any pieces I don't know fully to prepare myself for the tech interview. Most of the time, the technical interview follows an intro interview where they will explain what they plan to do in the technical portion, so you'll have ample time to review and prepare."
              },
              {
                "type": "text",
                "text": " ",
                "style": {
                  "bold": true
                }
              },
              {
                "type": "text",
                "text": "\n\n"
              },
              {
                "type": "text",
                "text": "I can't stress this enough. Every company is different.",
                "style": {
                  "bold": true
                }
              },
              {
                "type": "text",
                "text": "\n\nSome companies ask tech questions based on the language. Some companies will provide a scenario and ask how you'd tackle the problem. Some companies will share code and see if you can read and understand what it's doing. Some companies will even give you a tech project to complete independently.\n\nEveryone treats the tech portion differently based on their needs. I recently interviewed for my current job, and even though the position was for a senior-level Laravel developer, which is mostly back-end, they were looking for someone to take on more front-end work. So, my tech project was front-end based. Again, they explained this to me in the intro interview, and I knew what was coming.\n\nIn this situation for LaunchCode, your hiring company is technically LaunchCode, so I would review everything you've learned in the program as LC will be testing your technical ability with questions and plans to ask questions that you should know by now from the previous curriculum.\n\nIn general, for all technical prep, I prepare myself by building something, seeing where my pitfalls are and working on them from there. Doing gives the most touches in the most areas. If a company tries to provide you with a tech project to do or asks you to speak about something, actively coding gives the most coverage for the unexpected.\n\nI hope that helps."
              }
            ]
          }
        ]
      }
    ],
    "user_team": "T050CSX3EMT",
    "source_team": "T050CSX3EMT",
    "user_profile": {
      "avatar_hash": "",
      "image_72": "https://avatars.slack-edge.com/2023-11-15/6226202320128_458f5a2658cc811bcc2f_72.jpg",
      "first_name": "Shawn",
      "real_name": "Shawn Jones",
      "display_name": "Instructor - Shawn Jones",
      "team": "T050CSX3EMT",
      "name": "shawngregjones",
      "is_restricted": false,
      "is_ultra_restricted": false
    },
    "reply_users_count": 0,
    "reply_users": null
  }
]
